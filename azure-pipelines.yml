
trigger:
- '*'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  releaseBranchName: 'release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
     vmImage: 'ubuntu-latest'
     demands:
     - npm
    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '6.x'
    steps:
    - task: UseDotNet@2
      displayName: 'use .NET SDk $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'
    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false
   
    - bash: ls -l 
      displayName: 'List folder content'
    
    - script: './node_modules/.bin/node-sass ./$(wwwrootDir)/css/site.scss --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'
    - task: gulp@1
      displayName: 'Run glub tasks'

    - script: |
       'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
       'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)"'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dep'
      inputs:
        command: restore
        projects: '**/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguraion)'
      inputs:
        command: publish
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(BuildConfiguration)'
        zipAfterPublish: true
    
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

