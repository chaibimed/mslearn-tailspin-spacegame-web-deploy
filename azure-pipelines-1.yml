# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- "*"

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
    - job: 'Build'
      displayName: 'Build job'
      pool:
        vmImage: 'ubuntu-20.04'
        demands:
        - npm
      
      variables:
        wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
        dotnetSdkVersion: '6.x'
      
      steps:
        - task: UseDotNet@2
          displayName: 'Use .Net SDK $(dotnetSdkVersion)'
          inputs:
            version: '$(dotnetSdkVersion)'
        - task: Npm@1
          displayName: 'Run npm install'
          inputs:
            verbose: false
      
        - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
          displayName: 'Compile Sass assets'   

        - task: DotNetCoreCLI@2
          displayName: Build the project
          inputs:
            command: build
            arguments: '--configuration $(buildConfiguration)'
        
        - task: DotNetCoreCLI@2
          displayName: 'Publish the project'
          inputs:
            command: publish
            publishWebProjects: false
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
            zipAfterPublish: true

        - publish: '$(Build.ArtifactStagingDirectory)'
          artifact: drop
- stage: Deploy
  displayName: Deploy to dev environment
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: deploy
    pool: 
      vmImage: 'ubuntu-20.04'
    environment: dev
    variables:
     - group: Release
     - name: webAppName
       value: 'tailspin-space-game-web-dev'

    strategy:
     runOnce:
       deploy:
         steps:
         - download: current
           artifact: drop
         - task: AzureWebApp@1
           displayName: 'Deploy to azure web app'
           inputs:
             azureSubscription: '$(subscriptionId)'
             appType: 'webAppLinux'
             appName: '$(webAppName)'
             package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'